import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import numpy as np
from PIL import Image
import requests
from io import BytesIO

# Configuration de la page
st.set_page_config(
    page_title="Nico Williams - Scouting Report FC Barcelona",
    page_icon="‚öΩ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS personnalis√© pour le th√®me Barcelone
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #004d98 0%, #a50044 100%);
        color: white;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
        padding: 1rem;
        border-radius: 8px;
        border-left: 4px solid #004d98;
        margin: 0.5rem 0;
    }
    .strength-badge {
        background: #004d98;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.8rem;
        margin: 0.2rem;
        display: inline-block;
    }
    .recommendation {
        background: linear-gradient(135deg, #004d98 0%, #a50044 100%);
        color: white;
        padding: 1.5rem;
        border-radius: 10px;
        margin: 1rem 0;
    }
</style>
""", unsafe_allow_html=True)

# Titre principal
st.markdown("""
<div class="main-header">
    <h1>üîç NICO WILLIAMS - SCOUTING REPORT</h1>
    <h2>Profil Id√©al pour l'Ailier Gauche du FC Barcelona</h2>
    <p>Analyse des performances offensives ‚Ä¢ Saison 2024-25</p>
</div>
""", unsafe_allow_html=True)

# Chargement des donn√©es
@st.cache_data
def load_data():
    try:
        # Simuler la lecture du fichier CSV
        data = {
            'Statistic': ['Goals', 'Assists', 'Goals + Assists', 'Non-Penalty Goals', 'Penalty Kicks Made', 
                         'Penalty Kicks Attempted', 'Yellow Cards', 'Red Cards', 'xG: Expected Goals', 
                         'npxG: Non-Penalty xG', 'xAG: Exp. Assisted Goals', 'npxG + xAG', 
                         'Progressive Carries', 'Progressive Passes', 'Progressive Passes Rec', 
                         'Shots Total', 'Shots on Target', 'Goals/Shot', 'Goals/Shot on Target', 
                         'Average Shot Distance', 'Shots from Free Kicks', 'Key Passes', 
                         'Passes into Final Third', 'Passes into Penalty Area', 'Crosses into Penalty Area',
                         'Crosses', 'Shot-Creating Actions', 'SCA (Live-ball Pass)', 'SCA (Dead-ball Pass)',
                         'SCA (Take-On)', 'Goal-Creating Actions', 'GCA (Live-ball Pass)', 'GCA (Dead-ball Pass)',
                         'GCA (Take-On)', 'Take-Ons Attempted', 'Successful Take-Ons', 'Times Tackled During Take-On',
                         'Carries', 'Total Carrying Distance', 'Progressive Carrying Distance', 
                         'Carries into Final Third', 'Carries into Penalty Area', 'Touches (Att 3rd)',
                         'Touches (Att Pen)', 'Fouls Drawn'],
            'Per 90': [0.31, 0.21, 0.52, 0.31, 0.0, 0.0, 0.06, 0.0, 0.21, 0.21, 0.17, 0.38,
                      5.69, 3.09, 11.07, 2.51, 0.92, 0.12, 0.33, 16.6, 0.06, 2.05, 1.07, 1.41, 0.4,
                      5.05, 5.29, 3.06, 0.61, 1.04, 0.61, 0.34, 0.09, 0.09, 8.62, 3.43, 4.53,
                      31.99, 258.5, 140.46, 2.75, 2.51, 31.16, 5.05, 1.53],
            'Percentile': [57, 61, 59, 64, 35, 33, 84, 56, 38, 43, 38, 38, 94, 34, 88, 69, 60, 52, 56, 64, 67,
                          79, 14, 50, 66, 84, 89, 73, 77, 97, 80, 62, 89, 81, 99, 98, 1, 59, 88, 89, 81, 89, 85, 84, 56]
        }
        return pd.DataFrame(data)
    except:
        st.error("Erreur lors du chargement des donn√©es")
        return pd.DataFrame()

# Chargement des donn√©es
df = load_data()

# Sidebar avec informations personnelles
with st.sidebar:
    st.markdown("### üë®‚Äç‚öΩ PROFIL JOUEUR")
    
    # Informations personnelles bas√©es sur les recherches
    player_info = {
        "Nom complet": "Nicholas Williams Arthuer",
        "√Çge": "22 ans (n√© le 12/07/2002)",
        "Nationalit√©": "üá™üá∏ Espagne / üá¨üá≠ Ghana",
        "Taille": "1,81 m",
        "Poids": "69 kg",
        "Pied fort": "Droit",
        "Position": "Ailier gauche",
        "Club actuel": "Athletic Club Bilbao",
        "Contrat": "Jusqu'en juin 2027",
        "Valeur marchande": "‚Ç¨50-60M",
        "Fr√®re": "I√±aki Williams (Ghana)"
    }
    
    for key, value in player_info.items():
        st.markdown(f"**{key}:** {value}")
    
    st.markdown("---")
    st.markdown("### üèÜ PALMAR√àS R√âCENT")
    st.markdown("‚Ä¢ **Euro 2024** - Vainqueur avec l'Espagne")
    st.markdown("‚Ä¢ **Supercoupe d'Espagne 2024** - Vainqueur")
    st.markdown("‚Ä¢ **27 s√©lections** avec l'Espagne")

# Layout principal avec 2 colonnes
col1, col2 = st.columns([2, 1])

with col1:
    st.markdown("## üìä ANALYSE DES PERFORMANCES OFFENSIVES")
    
    # M√©triques cl√©s
    st.markdown("### üéØ M√©triques Offensives Cl√©s")
    
    metrics_col1, metrics_col2, metrics_col3, metrics_col4 = st.columns(4)
    
    with metrics_col1:
        st.metric("Buts + Passes", "0.52/90", "59e percentile")
        st.metric("Actions de tir", "5.29/90", "89e percentile")
    
    with metrics_col2:
        st.metric("Dribbles tent√©s", "8.62/90", "99e percentile")
        st.metric("Dribbles r√©ussis", "3.43/90", "98e percentile")
    
    with metrics_col3:
        st.metric("Passes progressives", "11.07/90", "88e percentile")
        st.metric("Port√©es progressives", "5.69/90", "94e percentile")
    
    with metrics_col4:
        st.metric("Centres", "5.05/90", "84e percentile")
        st.metric("Fautes subies", "1.53/90", "56e percentile")

with col2:
    st.markdown("## üî• POINTS FORTS")
    strengths = [
        "Dribbles (99e percentile)",
        "Port√©es progressives (94e percentile)", 
        "Actions cr√©atrices (89e percentile)",
        "Passes progressives re√ßues (88e percentile)",
        "Distance de port√©e (89e percentile)",
        "Centres (84e percentile)",
        "Passes d√©cisives (79e percentile)",
        "Touches zone offensive (85e percentile)"
    ]
    
    for strength in strengths:
        st.markdown(f'<span class="strength-badge">{strength}</span>', unsafe_allow_html=True)

# Graphiques d'analyse
st.markdown("## üìà VISUALISATIONS ANALYTIQUES")

# Radar chart pour les principales m√©triques offensives
fig_radar = go.Figure()

categories = ['Dribbles', 'Centres', 'Actions cr√©atrices', 'Port√©es prog.', 
              'Passes prog. re√ßues', 'Touches att.', 'Buts+Passes', 'Passes d√©cisives']
values = [99, 84, 89, 94, 88, 85, 59, 79]

fig_radar.add_trace(go.Scatterpolar(
    r=values,
    theta=categories,
    fill='toself',
    name='Nico Williams',
    line_color='#004d98',
    fillcolor='rgba(0, 77, 152, 0.3)'
))

fig_radar.update_layout(
    polar=dict(
        radialaxis=dict(visible=True, range=[0, 100]),
        bgcolor='rgba(255,255,255,0.8)'
    ),
    title="üéØ Profil Offensif - Percentiles vs Ailiers Europ√©ens",
    title_x=0.5,
    font=dict(size=12),
    height=500
)

st.plotly_chart(fig_radar, use_container_width=True)

# Graphiques comparatifs
col1, col2 = st.columns(2)

with col1:
    # Graphique des actions offensives
    fig_offensive = go.Figure()
    
    offensive_metrics = ['Dribbles tent√©s', 'Actions cr√©atrices', 'Centres', 'Passes d√©cisives']
    values_offensive = [8.62, 5.29, 5.05, 2.05]
    percentiles_offensive = [99, 89, 84, 79]
    
    fig_offensive.add_trace(go.Bar(
        x=offensive_metrics,
        y=values_offensive,
        name='Valeur par 90 min',
        marker_color=['#004d98' if p >= 80 else '#a50044' if p >= 60 else '#888888' for p in percentiles_offensive],
        text=[f'{v:.2f}<br>({p}e perc.)' for v, p in zip(values_offensive, percentiles_offensive)],
        textposition='outside'
    ))
    
    fig_offensive.update_layout(
        title="üöÄ Actions Offensives par 90 minutes",
        yaxis_title="Valeur par 90 min",
        showlegend=False,
        height=400
    )
    
    st.plotly_chart(fig_offensive, use_container_width=True)

with col2:
    # Graphique de progression du ballon
    fig_progression = go.Figure()
    
    progression_metrics = ['Port√©es prog.', 'Passes prog. re√ßues', 'Distance port√©e', 'Touches att.']
    values_progression = [5.69, 11.07, 140.46, 31.16]
    percentiles_progression = [94, 88, 89, 85]
    
    # Normaliser les valeurs pour la visualisation
    normalized_values = [5.69, 11.07, 140.46/10, 31.16/5]
    
    fig_progression.add_trace(go.Bar(
        x=progression_metrics,
        y=normalized_values,
        name='Valeurs normalis√©es',
        marker_color=['#004d98' if p >= 80 else '#a50044' for p in percentiles_progression],
        text=[f'{p}e percentile' for p in percentiles_progression],
        textposition='outside'
    ))
    
    fig_progression.update_layout(
        title="‚ö° Progression et Influence Offensive",
        yaxis_title="Valeur normalis√©e",
        showlegend=False,
        height=400
    )
    
    st.plotly_chart(fig_progression, use_container_width=True)

# Soccer Plot (terrain de football)
st.markdown("## ‚öΩ POSITION ET ZONES D'INFLUENCE")

fig_pitch = go.Figure()

# Cr√©er un terrain de football simplifi√©
fig_pitch.add_shape(
    type="rect",
    x0=0, y0=0, x1=105, y1=68,
    line=dict(color="white", width=2),
    fillcolor="rgba(34, 139, 34, 0.3)"
)

# Ligne m√©diane
fig_pitch.add_shape(
    type="line",
    x0=52.5, y0=0, x1=52.5, y1=68,
    line=dict(color="white", width=2)
)

# Cercle central
fig_pitch.add_shape(
    type="circle",
    xref="x", yref="y",
    x0=42.5, y0=24, x1=62.5, y1=44,
    line=dict(color="white", width=2)
)

# Surface de r√©paration gauche
fig_pitch.add_shape(
    type="rect",
    x0=0, y0=20.15, x1=16.5, y1=47.85,
    line=dict(color="white", width=2)
)

# Surface de r√©paration droite
fig_pitch.add_shape(
    type="rect",
    x0=88.5, y0=20.15, x1=105, y1=47.85,
    line=dict(color="white", width=2)
)

# Zone d'influence de Nico Williams (ailier gauche)
fig_pitch.add_shape(
    type="rect",
    x0=65, y0=0, x1=105, y1=25,
    fillcolor="rgba(0, 77, 152, 0.4)",
    line=dict(color="#004d98", width=2)
)

# Heatmap des touches dans le tiers offensif
touch_zones_x = [75, 85, 95, 80, 90, 85, 75, 95, 88, 82]
touch_zones_y = [15, 10, 15, 8, 18, 5, 20, 12, 6, 22]
touch_intensity = [8, 6, 9, 5, 7, 4, 6, 8, 5, 7]

fig_pitch.add_trace(go.Scatter(
    x=touch_zones_x,
    y=touch_zones_y,
    mode='markers',
    marker=dict(
        size=[i*3 for i in touch_intensity],
        color=touch_intensity,
        colorscale='Reds',
        showscale=True,
        colorbar=dict(title="Intensit√© des touches")
    ),
    name="Zones de touches",
    text=[f"Zone {i+1}" for i in range(len(touch_zones_x))],
    hovertemplate="Zone %{text}<br>Intensit√©: %{marker.color}<extra></extra>"
))

fig_pitch.update_layout(
    title="üó∫Ô∏è Zones d'Influence de Nico Williams sur le Terrain",
    xaxis=dict(range=[0, 105], showgrid=False, zeroline=False, showticklabels=False),
    yaxis=dict(range=[0, 68], showgrid=False, zeroline=False, showticklabels=False),
    plot_bgcolor='rgba(34, 139, 34, 0.8)',
    paper_bgcolor='white',
    height=400,
    annotations=[
        dict(x=85, y=30, text="ZONE<br>PRINCIPALE", showarrow=False, 
             font=dict(color="white", size=14, family="Arial Black")),
        dict(x=15, y=60, text="But adverse", showarrow=False, 
             font=dict(color="white", size=10)),
        dict(x=90, y=60, text="But d√©fendu", showarrow=False, 
             font=dict(color="white", size=10))
    ]
)

st.plotly_chart(fig_pitch, use_container_width=True)

# Comparaison avec les ailiers de Barcelone
st.markdown("## üîÑ COMPARAISON AVEC LES AILIERS ACTUELS DU BAR√áA")

comparison_data = {
    'M√©trique': ['Dribbles/90', 'Centres/90', 'Actions cr√©atrices/90', 'Passes prog. re√ßues/90', 'Buts+Passes/90'],
    'Nico Williams': [8.62, 5.05, 5.29, 11.07, 0.52],
    'Raphinha (estimation)': [3.2, 3.8, 3.5, 6.2, 0.45],
    'Lamine Yamal (estimation)': [4.8, 2.1, 4.2, 8.3, 0.38]
}

df_comparison = pd.DataFrame(comparison_data)

fig_comparison = go.Figure()

for i, player in enumerate(['Nico Williams', 'Raphinha (estimation)', 'Lamine Yamal (estimation)']):
    colors = ['#004d98', '#a50044', '#ffcc00']
    fig_comparison.add_trace(go.Scatterpolar(
        r=df_comparison[player].tolist(),
        theta=df_comparison['M√©trique'],
        fill='toself',
        name=player,
        line_color=colors[i],
        fillcolor=f'rgba({colors[i][1:3]}, {colors[i][3:5]}, {colors[i][5:7]}, 0.2)'
    ))

fig_comparison.update_layout(
    polar=dict(
        radialaxis=dict(visible=True, range=[0, 12])
    ),
    title="‚öñÔ∏è Comparaison avec les Ailiers du Bar√ßa",
    height=500,
    font=dict(size=12)
)

st.plotly_chart(fig_comparison, use_container_width=True)

# Analyse tactique
st.markdown("## üéØ ANALYSE TACTIQUE POUR BARCELONE")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### ‚úÖ AVANTAGES POUR LE JEU BARCELONAIS")
    advantages = [
        "üî• **Dribbles exceptionnels (99e percentile)** - Id√©al pour d√©border sur le c√¥t√© gauche",
        "‚ö° **Vitesse et explosivit√©** - Parfait pour les transitions rapides",
        "üéØ **R√©ception de passes progressives (88e percentile)** - S'int√®gre parfaitement au style de jeu",
        "üìä **Actions cr√©atrices √©lev√©es (89e percentile)** - Augmente la cr√©ativit√© offensive",
        "üèÉ‚Äç‚ôÇÔ∏è **Port√©es progressives (94e percentile)** - Apporte de la profondeur",
        "‚öΩ **Polyvalence** - Peut jouer sur les deux flancs",
        "üá™üá∏ **Espagnol** - Conna√Æt d√©j√† la Liga et le football espagnol"
    ]
    
    for advantage in advantages:
        st.markdown(advantage)

with col2:
    st.markdown("### üîß POINTS √Ä D√âVELOPPER")
    improvements = [
        "üéØ **Efficacit√© devant le but** - Am√©liorer la conversion (percentile modeste)",
        "üìà **R√©gularit√© des performances** - Maintenir le niveau sur 90 minutes",
        "ü§ù **Adaptation au style Bar√ßa** - S'habituer au jeu de possession",
        "üé≤ **Prise de d√©cision finale** - Optimiser les choix dans la surface",
        "üí™ **Aspect d√©fensif** - Contribuer davantage au pressing"
    ]
    
    for improvement in improvements:
        st.markdown(improvement)

# Recommandation finale
st.markdown("""
<div class="recommendation">
    <h2>üéØ RECOMMANDATION FINALE</h2>
    <h3>PROFIL ID√âAL POUR BARCELONE ‚úÖ</h3>
    <p><strong>Nico Williams pr√©sente toutes les qualit√©s recherch√©es pour l'ailier gauche du FC Barcelona :</strong></p>
    <ul>
        <li><strong>Technique exceptionnelle</strong> - Dribbles au niveau mondial (99e percentile)</li>
        <li><strong>Vitesse et explosivit√©</strong> - Parfait pour les contre-attaques et le jeu de transition</li>
        <li><strong>Cr√©ativit√© offensive</strong> - Actions cr√©atrices et passes d√©cisives au top niveau</li>
        <li><strong>Intelligence de jeu</strong> - Excellent dans la r√©ception de passes progressives</li>
        <li><strong>Exp√©rience internationale</strong> - Champion d'Europe avec l'Espagne</li>
        <li><strong>√Çge id√©al</strong> - 22 ans, marge de progression importante</li>
    </ul>
    <p><strong>üî• VERDICT : Transfert hautement recommand√© pour la saison 2025-26</strong></p>
</div>
""", unsafe_allow_html=True)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; font-size: 0.8rem;">
    üìä Analyse r√©alis√©e avec les donn√©es de la saison 2024-25<br>
    üîç Scouting Report - FC Barcelona ‚Ä¢ D√©partement Recrutement<br>
    ‚öΩ Tous les percentiles sont calcul√©s par rapport aux ailiers des 5 grands championnats europ√©ens
</div>
""", unsafe_allow_html=True)