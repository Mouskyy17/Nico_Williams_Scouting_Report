import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import matplotlib.pyplot as plt
from mplsoccer import Pitch
import seaborn as sns

# Configuration de la page
st.set_page_config(
    page_title="Nico Williams - Scouting Report",
    page_icon="‚öΩ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS personnalis√© pour le style Bar√ßa
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #A50044 0%, #004D98 100%);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 30px;
    }
    .main-header h1 {
        color: white;
        text-align: center;
        margin: 0;
        font-size: 2.5rem;
    }
    .metric-card {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 20px;
        border-radius: 10px;
        border-left: 5px solid #A50044;
        margin: 10px 0;
    }
    .strength-card {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #28a745;
        margin: 10px 0;
    }
    .barca-colors {
        background: linear-gradient(90deg, #A50044 0%, #004D98 100%);
        color: white;
        padding: 10px;
        border-radius: 5px;
    }
</style>
""", unsafe_allow_html=True)

# Chargement des donn√©es
@st.cache_data
def load_data():
    # Lecture du fichier CSV
    df = pd.read_csv('nico_williams_stats.csv')
    
    # Nettoyage des donn√©es
    df['Statistic'] = df['Statistic'].str.strip()
    df['Per 90'] = pd.to_numeric(df['Per 90'], errors='coerce')
    df['Percentile'] = pd.to_numeric(df['Percentile'], errors='coerce')
    
    return df

# Header principal
st.markdown("""
<div class="main-header">
    <h1>üî¥üîµ NICO WILLIAMS - SCOUTING REPORT FC BARCELONA</h1>
</div>
""", unsafe_allow_html=True)

# Sidebar avec informations personnelles
with st.sidebar:
    st.markdown("## üìã Informations Personnelles")
    
    # Photo du joueur (placeholder)
    st.image("https://via.placeholder.com/300x400/A50044/FFFFFF?text=NICO+WILLIAMS", 
             caption="Nico Williams", use_column_width=True)
    
    st.markdown("""
    **Nom Complet:** Nicol√°s Williams Arthuer  
    **√Çge:** 22 ans (n√© le 12 juillet 2002)  
    **Nationalit√©:** üá™üá∏ Espagne  
    **Position:** Ailier Gauche/Droit  
    **Club Actuel:** Athletic Bilbao  
    **Pied Fort:** Droit  
    **Taille:** 1m81  
    **Valeur Marchande:** ~60M‚Ç¨  
    
    ---
    
    ### üéØ Profil Id√©al pour le Bar√ßa
    ‚úÖ Vitesse exceptionnelle  
    ‚úÖ Dribbles √©lite  
    ‚úÖ Cr√©ativit√© offensive  
    ‚úÖ Jeune et en progression  
    ‚úÖ Exp√©rience en Liga  
    """)

# Chargement des donn√©es
try:
    df = load_data()
    
    # M√©triques cl√©s pour Barcelone
    col1, col2, col3, col4 = st.columns(4)
    
    # Fonction pour obtenir les valeurs
    def get_stat_value(stat_name):
        mask = df['Statistic'].str.contains(stat_name, case=False, na=False)
        if mask.any():
            return df[mask]['Per 90'].iloc[0], df[mask]['Percentile'].iloc[0]
        return 0, 0
    
    with col1:
        goals_val, goals_perc = get_stat_value('Goals')
        st.markdown(f"""
        <div class="metric-card">
            <h3>‚öΩ Buts</h3>
            <h2>{goals_val}</h2>
            <p>Par 90 min | {goals_perc}e percentile</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        assists_val, assists_perc = get_stat_value('Assists')
        st.markdown(f"""
        <div class="metric-card">
            <h3>üéØ Passes D√©cisives</h3>
            <h2>{assists_val}</h2>
            <p>Par 90 min | {assists_perc}e percentile</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        takeOns_val, takeOns_perc = get_stat_value('Take-Ons Attempted')
        st.markdown(f"""
        <div class="metric-card">
            <h3>üèÉ Dribbles Tent√©s</h3>
            <h2>{takeOns_val}</h2>
            <p>Par 90 min | {takeOns_perc}e percentile</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        carries_val, carries_perc = get_stat_value('Progressive Carries')
        st.markdown(f"""
        <div class="metric-card">
            <h3>üìà Courses Progressives</h3>
            <h2>{carries_val}</h2>
            <p>Par 90 min | {carries_perc}e percentile</p>
        </div>
        """, unsafe_allow_html=True)
    
    # Section principale avec onglets
    tab1, tab2, tab3, tab4 = st.tabs(["üéØ Analyse Offensive", "üìä Radar Chart", "‚öΩ Position sur Terrain", "üìà M√©triques Avanc√©es"])
    
    with tab1:
        st.markdown("## üî• Points Forts Offensifs - Profil Barcelone")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div class="strength-card">
                <h3>üèÉ‚Äç‚ôÇÔ∏è VITESSE ET DRIBBLES (√âLITE)</h3>
                <p><strong>99e percentile</strong> en tentatives de dribbles (8.62/90)</p>
                <p><strong>98e percentile</strong> en dribbles r√©ussis (3.43/90)</p>
                <p>Capable de d√©border n'importe quel d√©fenseur</p>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown("""
            <div class="strength-card">
                <h3>üìà PROGRESSION BALLE AU PIED</h3>
                <p><strong>94e percentile</strong> en courses progressives (5.69/90)</p>
                <p><strong>89e percentile</strong> en distance progressive (140.46m/90)</p>
                <p>Id√©al pour sortir le ballon et cr√©er du danger</p>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            st.markdown("""
            <div class="strength-card">
                <h3>üéØ CR√âATION D'OCCASIONS</h3>
                <p><strong>89e percentile</strong> en actions cr√©atrices de tirs (5.29/90)</p>
                <p><strong>79e percentile</strong> en passes cl√©s (2.05/90)</p>
                <p>Capable de faire la diff√©rence dans les derniers m√®tres</p>
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown("""
            <div class="strength-card">
                <h3>‚ö° ACTIVIT√â EN SURFACE</h3>
                <p><strong>89e percentile</strong> en entr√©es dans la surface (2.51/90)</p>
                <p><strong>88e percentile</strong> en passes progressives re√ßues (11.07/90)</p>
                <p>Toujours disponible pour les derni√®res passes</p>
            </div>
            """, unsafe_allow_html=True)
    
    with tab2:
        st.markdown("## üìä Profil Radar - Aptitudes Offensives")
        
        # S√©lection des m√©triques cl√©s pour le radar
        radar_stats = [
            'Goals', 'Assists', 'Take-Ons Attempted', 'Successful Take-Ons',
            'Progressive Carries', 'Shot-Creating Actions', 'Key Passes',
            'Carries into Penalty Area', 'Crosses', 'Progressive Passes Rec'
        ]
        
        radar_data = []
        radar_labels = []
        
        for stat in radar_stats:
            mask = df['Statistic'].str.contains(stat, case=False, na=False)
            if mask.any():
                percentile = df[mask]['Percentile'].iloc[0]
                radar_data.append(percentile)
                radar_labels.append(stat.replace('_', ' ').title())
        
        # Cr√©ation du radar chart
        fig = go.Figure()
        
        fig.add_trace(go.Scatterpolar(
            r=radar_data,
            theta=radar_labels,
            fill='toself',
            fillcolor='rgba(165, 0, 68, 0.3)',
            line=dict(color='#A50044', width=3),
            name='Nico Williams'
        ))
        
        fig.update_layout(
            polar=dict(
                radialaxis=dict(
                    visible=True,
                    range=[0, 100],
                    tickvals=[20, 40, 60, 80, 100],
                    ticktext=['20%', '40%', '60%', '80%', '100%']
                )
            ),
            title="Radar des Performances Offensives (Percentiles)",
            title_x=0.5,
            height=600
        )
        
        st.plotly_chart(fig, use_container_width=True)
        
        st.markdown("""
        <div class="barca-colors">
            <strong>üí° Analyse:</strong> Nico Williams excelle dans tous les domaines offensifs cl√©s pour un ailier moderne. 
            Ses percentiles √©lev√©s en dribbles, courses progressives et cr√©ation d'occasions en font un profil id√©al 
            pour le syst√®me de jeu de Barcelone.
        </div>
        """, unsafe_allow_html=True)
    
    with tab3:
        st.markdown("## ‚öΩ Position et Zone d'Influence")
        
        # Cr√©ation du terrain avec mplsoccer
        fig, ax = plt.subplots(figsize=(12, 8))
        
        # Terrain
        pitch = Pitch(pitch_color='#2e7d32', line_color='white', linewidth=2)
        pitch.draw(ax=ax)
        
        # Zones d'activit√© principales (bas√©es sur les stats)
        # Zone ailier gauche
        ax.add_patch(plt.Rectangle((0, 20), 30, 40, 
                                 fill=True, color='red', alpha=0.3, 
                                 label='Zone Principale'))
        
        # Zone de percussion vers le but
        ax.add_patch(plt.Rectangle((70, 25), 25, 30, 
                                 fill=True, color='yellow', alpha=0.4, 
                                 label='Zone de Finition'))
        
        # Trajectoires de course
        ax.arrow(10, 40, 60, 0, head_width=2, head_length=3, 
                fc='white', ec='white', linewidth=3, alpha=0.8)
        ax.arrow(15, 35, 50, 15, head_width=2, head_length=3, 
                fc='white', ec='white', linewidth=3, alpha=0.8)
        
        # Position du joueur
        ax.scatter(15, 40, s=500, c='#A50044', marker='o', 
                  edgecolors='white', linewidth=3, zorder=5)
        ax.text(15, 35, 'NICO\nWILLIAMS', ha='center', va='top', 
               fontsize=10, fontweight='bold', color='white')
        
        ax.set_title('Position et Zones d\'Influence de Nico Williams', 
                    fontsize=16, fontweight='bold', pad=20)
        ax.legend(loc='upper right')
        
        st.pyplot(fig)
        
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("""
            **üî¥ Zone Rouge:** Position principale ailier gauche
            - R√©ception des ballons de construction
            - D√©but des actions offensives
            - 85e percentile en touches en zone offensive
            """)
        
        with col2:
            st.markdown("""
            **üü° Zone Jaune:** Zone de finition
            - 89e percentile entr√©es en surface
            - 2.51 entr√©es/90 min
            - Zone de danger maximum
            """)
    
    with tab4:
        st.markdown("## üìà M√©triques Avanc√©es et Comparaisons")
        
        # Graphique des m√©triques offensives cl√©s
        offensive_metrics = df[df['Statistic'].isin([
            'Goals', 'Assists', 'Shot-Creating Actions', 'Key Passes',
            'Take-Ons Attempted', 'Progressive Carries', 'Crosses'
        ])].copy()
        
        fig = make_subplots(
            rows=2, cols=2,
            subplot_titles=('Contribution Offensive', 'Cr√©ativit√©', 'Dribbles et Courses', 'Activit√© Offensive'),
            specs=[[{"secondary_y": True}, {"secondary_y": True}],
                   [{"secondary_y": True}, {"secondary_y": True}]]
        )
        
        # Graphique 1: Buts + Passes d√©cisives
        goals_assists = df[df['Statistic'].isin(['Goals', 'Assists'])]
        fig.add_trace(
            go.Bar(x=goals_assists['Statistic'], y=goals_assists['Per 90'], 
                   name='Par 90 min', marker_color='#A50044'),
            row=1, col=1
        )
        
        # Graphique 2: Cr√©ation
        creation = df[df['Statistic'].isin(['Shot-Creating Actions', 'Key Passes'])]
        fig.add_trace(
            go.Bar(x=creation['Statistic'], y=creation['Per 90'], 
                   name='Cr√©ation', marker_color='#004D98'),
            row=1, col=2
        )
        
        # Graphique 3: Dribbles
        dribbles = df[df['Statistic'].isin(['Take-Ons Attempted', 'Progressive Carries'])]
        fig.add_trace(
            go.Bar(x=dribbles['Statistic'], y=dribbles['Per 90'], 
                   name='Progression', marker_color='#28a745'),
            row=2, col=1
        )
        
        # Graphique 4: Activit√©
        activity = df[df['Statistic'].isin(['Crosses', 'Touches (Att 3rd)'])]
        if not activity.empty:
            fig.add_trace(
                go.Bar(x=activity['Statistic'], y=activity['Per 90'], 
                       name='Activit√©', marker_color='#ffc107'),
                row=2, col=2
            )
        
        fig.update_layout(height=600, showlegend=False, 
                         title_text="Profil Offensif Complet de Nico Williams")
        st.plotly_chart(fig, use_container_width=True)
        
        # Tableau de comparaison avec les standards Bar√ßa
        st.markdown("### üéØ Ad√©quation avec le Profil Barcelone")
        
        comparison_data = {
            'Crit√®re': [
                'Vitesse/Dribbles', 'Cr√©ativit√©', 'Progression', 
                'Activit√© Offensive', 'Jeunesse', 'Exp√©rience Liga'
            ],
            'Importance Bar√ßa': ['Tr√®s Haute', 'Tr√®s Haute', 'Haute', 'Haute', 'Moyenne', 'Haute'],
            'Niveau Nico': ['√âlite (99%)', 'Tr√®s Bon (79%)', '√âlite (94%)', 'Tr√®s Bon (85%)', 'Parfait (22 ans)', 'Excellente'],
            'Score': ['10/10', '8/10', '10/10', '8/10', '9/10', '9/10']
        }
        
        comparison_df = pd.DataFrame(comparison_data)
        st.dataframe(comparison_df, use_container_width=True)
        
        # Score final
        st.markdown("""
        <div class="barca-colors">
            <h2 style="text-align: center; margin: 0;">
                üéØ SCORE FINAL D'AD√âQUATION: 9.0/10
            </h2>
            <p style="text-align: center; margin: 10px 0 0 0;">
                <strong>RECOMMANDATION: CIBLE PRIORITAIRE POUR LE MERCATO</strong>
            </p>
        </div>
        """, unsafe_allow_html=True)

except Exception as e:
    st.error(f"Erreur lors du chargement des donn√©es: {e}")
    st.info("Assurez-vous que le fichier 'nico_williams_stats.csv' est pr√©sent dans le r√©pertoire.")

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666;">
    <p>üìä Scouting Report g√©n√©r√© pour FC Barcelona | Donn√©es saison 2023-24</p>
    <p>üî¥üîµ <strong>Visca el Bar√ßa!</strong></p>
</div>
""", unsafe_allow_html=True)